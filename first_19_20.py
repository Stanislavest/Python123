#                          16_11_2021
# *** *** *** *** *** *** *** *** *** ***
#  РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ  #
#                        .findall / .search
import re
#
# s = "Я ищу совпадения в 2021 году. И я их найду в два счёта."
# reg = 'я'
# print(s.find(reg))  # 15
# # find() - в строке будет искать шаблон и возвращать индекс первого вхождения подстроки
# #          в строке. Если шаблон не найден, то будет возвращать "-1"
# print(reg in s)
# print(re.findall(reg, s))  # возвращ список всех совпадений с рег выраж                ***
# print(re.findall("21", s))
# print(re.search(reg, s))  # месторасположение ПЕРВОГО совпадения объекта               ***
# print(re.search(reg, s).span())
# print(re.search(reg, s).start())
# print(re.search(reg, s).end())
# print(re.search(reg, s).group())
# # reg = 'Я'
# print(re.match(reg, s))  # поиск по заданному шаблону в начале строки (не исп)
# reg = r'\.'
# print(re.split(reg, s, 1))  # возвращает список, в котором строка разбита по шаблону
# print(re.sub(reg, "!!!", s))  # заменяет совпадения указанным текстом                  ***


# s = "Я ищу совпадения в 2021 году. И я их найду в 2 счёта. 2565"
# reg = "2021"
# print(re.findall(reg, s))
# reg = "[12][0-9][0-9][0-9]"
# print(re.findall(reg, s))
# s = "Ели[-ели]."
# reg = r"[А-Яа-яё\[\].-]"  # регулярное выражение
# print(re.findall(reg, s))

# s = "Я ищу совпадения в 2021 году. И я их найду в 2 счёта. 2565"
# reg = r'[^0-9]'  # совпадение для любого символа, кроме заданных                         ***
# print(re.findall(reg, s))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ЗАДАЧА

# s = 'Час: в 24-часовом формате Т21:45 Минуты в диапазоне 2021-06-25Т01:09'
# reg = r'[0-2][0-9][\:][0-5][0-9]'
# print(re.findall(reg, s))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***

# s = "Я ищу совпадения в 2021 году. И я их найду в 200 счёта. 25_65"
# reg = r'20*'
# print(re.findall(reg, s))

# \d... - одна любая цифра                                              *
# \w... - буква, цифра, символ подчеркивания (_)                        *
# \s... - один пробельный символ (включая табуляцию и перенос строки)   *
# \D... - все кроме цифр                                                *
# \W... - кроме букв, цифр, символа подчеркивания                       *
# \S... - все кроме пробелов                                            *
# \A... - ищет символ в начале строки
# ...\Z - ищет символ в конце строки
# ...\B... - ищет символ в начале или конце строки

# + - количество повторений от 1 до ...
# * - количество повторений от 0 до ...
# ? - количество повторений от 0 до 1

# d = "Цифры: 7, +17, -42, 0013, 0.3"
# print(re.findall(r'[+-]?\d+', d))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ЗАДАЧА

# s = "05-03-1987 # Дата рождения"
# print("Дата рождения:", re.sub('#.*', '', s))
# print("Дата рождения:", re.sub('-', ':', s))
# print("Дата рождения", re.sub("-", ":", re.sub("#.*", "", s)))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***

# s = "12 sept 2021 year"
# reg = r'\d{2,4}'
# print(re.findall(reg, s))

# s = "МИД - Министерство иностранных дел, ГЭС - гидроэлектростанция, "\
#     "ФСБ - Федеральная служба безопасности"
# reg = r'[А-ЯЁ]{2,}\s*[А-ЯЁ]*'
# print(re.findall(reg, s))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ЗАДАЧА

# s = "+7 499 456-45-78, +74994564578, 7(499) 456 45 78, 74994564578"
# reg = r'\+?7[0-9]{10}'
# print(re.findall(reg, s))
#
# s = "+7 499 456-45-78, +74994564578, 7(499) 456 45 78, 74994564578"
# reg = r"[+][7]\d{10,}|[7]\d{10,}"
# print(re.findall(reg, s))
#
# s = "+7 499 456-45-78, +74994564578, 7 (499) 456 45 78, 74994564578"
# reg = r"[+-]?[0-9]{11,}"
# print(re.findall(reg, s))


# s = "Я ищу совпадения в 2021 году. И я их найду в 2000 счёта."
# reg = r'^\w+\s\w+'
# print(re.findall(reg, s))
#
# s = "Я ищу совпадения в 2021 году. И я их найду в 2000 счёта."
# reg = r'\w+\.$'
# print(re.findall(reg, s))
#
# s = "7 900 qwreqewq"
# reg = r'^\d+\s+\w+'
# print(re.findall(reg, s))


# s = "Я ищу совпадения в 2021 году. И я их найду в 2 счёта."
# reg = r'я'
# print(re.findall(reg, s, re.IGNORECASE))
# print(re.findall(reg, s, re.I))
# print(re.findall(reg, s, flags=re.I))
# print(re.findall(r'\w+', '12 + h + Ԥ', flags=re.ASCII))
#
# # re.DEBUG
# # re.LOCALE
# # re.DOTALL
#
# txt = r'''
# Торт
# с вишней1
# вишней2
# '''
# print(re.findall(r'Торт.с', txt))
# print(re.findall(r'Торт.с', txt, flags=re.DOTALL))
# print(re.findall(r'^виш\w+', txt, flags=re.MULTILINE))

# print(re.findall('''
# [\w.-]+
# @ # коммениарий @
# [\w.-]+
# ''', 'test@mail.ru', re.VERBOSE))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** 18_11_2021

# s = "author=Пушкин А.С.; title = Евгений Онегин; price   =200; year= 1831"
# reg = r'\w+\s*=\s*[^;]+'
# print(re.findall(reg, s))

# def validate_name(name):
#     return re.findall(r'^[a-z0-9_-]{3,16}$', name, re.IGNORECASE)
#
#
# print(validate_name('Python_master'))
# print(validate_name('Python_master_master'))


# # ЖАДНЫЕ (greedy) - захватывает макисмально возможное число символов
# # ЛЕНИВЫЕ (lazy) - захватывает минимально возможное число символов (?)
# # *?, +?, ??
# # {n,m}?, {,m}?, {n,}?
#
# text = "<body>Пример жадного соответствия регулярных выражений</body>"
# print(re.findall('<.*?>', text))

# text = "<body>Пример жадного соответствия регулярных выражений</body>"
# print(re.search('<.*?>', text).group())


# s = "<p>Изображение <img src='bg.jpg'> - фон страницы</p>"
# reg = r"img[^>]*>"  # ______________________________________поиск до скобки
# print(re.findall(reg, s))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ЗАДАЧА

# text = "Python[16] (питон[17]fffff)fffffffff[18]00000000000[19]"
# reg = r"\[.*?]"
# print(re.findall(reg, text))

# s = "Петр, Ольга и Виталий отлично учатся!"
# reg = 'Петр|Ольга|Виталий'
# print(re.findall(reg, s))

# s = "Word2016, PS6, AI5"
# reg = r'([a-z]+)(\d*)'
# print(re.findall(reg, s, re.I))
# print(re.search(reg, s, re.I).group())
# reg = r'[a-z]+\d*'
# print(re.findall(reg, s, re.I))


# _____________________________________________Разделение регулярным выражением
# s = "5 + 7*2 - 4"
# reg = r'\s*([+*-])\s*'
# print(re.split(reg, s))


# # ________________________________________________Круглые скобки создают кортеж
# s = input("Введите дату в формате dd-mm-YYYY: ")
# s = "28-08-2021"
# reg = r'([0-2][0-9]|[3][01])-([0][1-9]|[1][012])-([1][9][0-9][0-9]|[2][0][0-9][0-9])'
# print(re.findall(reg, s))

# # 192.168.222.255
# s = "127.0.0.1"
# # reg = r'\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}'
# reg = r'(?:\d{1,3}.){3}(?:\d{1,3})'
# print(re.findall(reg, s))

# *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***

# s = "Базовый JS прост. Продвинутый Python сложн. Базовый Python прост"
# reg = r'(?<!продвинутый )Python'
# # r'[а-яё]+(?= Python)' __________ ['Продвинутый', 'Базовый']
# # r'базовый(?! Python)' __________ ['Базовый'] (перед JS)
# # r'(?<=базовый )\w{2,6}' ________ ['JS', 'Python']
# # r'(?<!продвинутый )Python' _____ ['Python'] (базовый)
#
# print(re.findall(reg, s, re.I))


# s = "КарлIV, КарлIX, КарлV, КарлVI, КарлVII, КарлVIII, ЛюдовикIX, ЛюдовикVI, " \
#     "ЛюдовикVII, ЛюдовикVIII, ЛюдовикX, ..., ЛюдовикXVIII, ФилиппI, ФилиппII, " \
#     "ФилиппIII, ФилиппIV, ФилиппV, ФилиппVI"
# # reg = r'Людовик(?=VI)\w+'
# # reg = r'Людовик(?!VI)\w+'
# reg = r'\w+(?<!Людовик)VI'
# print(re.findall(reg, s, re.I))


# s1 = "1X, Text ABC 456 A1B2C3"
# reg1 = r'(?<!\d)\d(?!\d)'
# print(re.findall(reg1, s1, re.I))
# s2 = "text from #START# till #END#"
# reg2 = r'(?<=#START#).*(?=#END#)'
# print(re.findall(reg2, s2, re.I))
# s3 = "12_34__56"
# reg3 = r'\d+(?=_(?!_))'
# print(re.findall(reg3, s3, re.I))


# s = "Я ищу совпадения в 2021 году. И я их найду в 20000 счёта."
# reg = r'([0-9]+)\s(\D+)'
# # print(re.findall(reg, s, re.I))
# print(re.search(reg, s).group())
# m = re.search(reg, s)
# print("Строка: ", m[0])  # весь запрос
# print("Цифры: ", m[1])  # первая скобка
# print("Буквы: ", m[2])  # вторая скобка


# s = "Самолет прилетает 10/23/2021. Будем вас рады видеть после 10/24/2021"  # поменять формат даты
# reg = r'(\d{2})/(\d{2})/(\d{4})'
# print(re.sub(reg, r'\2.\1.\3', s))  # порядковый номер скобки

# s = "google.com and google.ru"  # добавить в строку данные для получения ссылки например (1 - общие скобки)
# reg = r'(([a-z0-9-]{2,}\.)+[a-z]{2,4})'
# print(re.sub(reg, r'http://\1', s))


# def is_roman_number(num):  #__________________________________________Проверка римского числа на римскость
#     pattern = r'^M{0,3}(CD|CM|D?C{0,3})?(XC|XL|L?X{0,3})?(IX|IV|V?I{0,3})?$'
#     if re.search(pattern, num):
#         return True
#     return False
#
#
# print(is_roman_number('MMDCCLXXIII'))
# print(is_roman_number('CCCMMVIIVV'))
# print(is_roman_number('CVIII'))
